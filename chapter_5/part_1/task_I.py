# Очередь
# В программировании существует потребность не только в изученных нами коллекциях.
# Одна из таких очередь.
# Она реализует подход к хранению данных по принципу «Первый вошёл – первый ушел».
#
# Реализуйте класс Queue, который не имеет параметров инициализации, но поддерживает методы:
#
# push(item) — добавить элемент в конец очереди;
# pop() — «вытащить» первый элемент из очереди;
# is_empty() — проверят очередь на пустоту.
# Примечание
# Ваше решение должно содержать только классы и функции.
# В решении не должно быть вызовов инициализации требуемых классов.

class Queue:

    def __init__(self):
        self.queue = []

    def push(self, item):
        self.queue.append(item)

    def pop(self):
        return self.queue.pop(0)

    def is_empty(self):
        return len(self.queue) == 0
